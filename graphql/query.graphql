type Query {
    countries: [Country!]! @all
    me: User @auth(guard: "api")
    searchUsers(keywords: String!): [User!]!
        @paginate(builder: "App\\GraphQL\\Queries\\SearchUsers")
        @middleware(checks: ["auth:api"])
    categories: [Category!]! @all @middleware(checks: ["auth:api"])
    quotes: [Quote!]! @all @middleware(checks: ["auth:api"])
    languages: [Language!]! @all @middleware(checks: ["auth:api"])
    drafts: [Post!]! @middleware(checks: ["auth:api"])
    all_chatrooms: [Chatroom!]! @middleware(checks: ["auth:api"])
    chatroom_by_id(chatroom_id: ID! @rules(apply: ["required"])): Chatroom!
        @middleware(checks: ["auth:api"])
    posts: [Post!]!
        @paginate(builder: "App\\GraphQL\\Queries\\Posts")
        @middleware(checks: ["auth:api"])
    helloThere: String!
        @middleware(checks: ["auth:api"])
        @broadcast(subscription: "testSubscription")
}
