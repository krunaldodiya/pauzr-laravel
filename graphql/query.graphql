type Query {
    countries: [Country!]! @all
    me: User @auth @middleware(checks: ["auth:api"])
    getUserById(user_id: ID! @rules(apply: ["required"])): User
        @middleware(checks: ["auth:api"])
    searchUsers(keywords: String!): [User!]!
        @paginate(builder: "App\\GraphQL\\Queries\\SearchUsers")
        @middleware(checks: ["auth:api"])
    categories: [Category!]! @all @middleware(checks: ["auth:api"])
    quotes: [Quote!]! @all @middleware(checks: ["auth:api"])
    languages: [Language!]! @all @middleware(checks: ["auth:api"])
    drafts: [Post!]! @middleware(checks: ["auth:api"])
    all_chatrooms: [Chatroom!]! @middleware(checks: ["auth:api"])
    private_chatroom(friend_id: ID! @rules(apply: ["required"])): Chatroom!
        @middleware(checks: ["auth:api"])
    group_chatroom(chatroom_id: ID! @rules(apply: ["required"])): Chatroom!
        @middleware(checks: ["auth:api"])
    posts: [Post!]!
        @paginate(builder: "App\\GraphQL\\Queries\\Posts")
        @middleware(checks: ["auth:api"])
    notifications: [Notification!]! @middleware(checks: ["auth:api"])
    getConfig(device_id: String! @rules(apply: ["required"])): Config!
        @middleware(checks: ["jwt.check"])
}
